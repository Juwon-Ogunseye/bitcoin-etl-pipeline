{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2025-04-19T11:10:11.080671Z", "invocation_id": "92cde274-d953-4a99-9e32-008e8c26068c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:06.830137Z", "completed_at": "2025-04-19T11:10:06.880119Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:06.887598Z", "completed_at": "2025-04-19T11:10:07.470179Z"}], "thread_id": "Thread-1", "execution_time": 0.649707555770874, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.example", "compiled": true, "compiled_code": "\n\nSELECT \n    transaction_id AS tx_hash,\n    transaction_timestamp AS timestamp,\n    pair_token0_symbol,\n    pair_token1_symbol,\n    amount_u_s_d AS value_usd,\n    amount0_in,\n    amount1_in,\n    amount0_out,\n    amount1_out\nFROM `bitcoin`.`swaps_latest`", "relation_name": "`bitcoin`.`example`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:07.499884Z", "completed_at": "2025-04-19T11:10:07.525321Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:07.532157Z", "completed_at": "2025-04-19T11:10:07.739842Z"}], "thread_id": "Thread-1", "execution_time": 0.2510051727294922, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.new_pairs_analysis", "compiled": true, "compiled_code": "\n\nWITH pair_metrics AS (\n  SELECT\n    id AS pair_address,\n    token0_symbol || '-' || token1_symbol AS pair_name,\n    parseDateTimeBestEffort(created_at_timestamp) AS creation_time,\n    created_at_block_number,\n    token0_id,\n    token1_id,\n    reserve_u_s_d,\n    reserve_e_t_h,\n    reserve_u_s_d / NULLIF(reserve_e_t_h, 0) AS usd_per_eth_price,\n    -- Calculate hourly age of the pair\n    dateDiff('hour', creation_time, now()) AS hours_since_creation\n  FROM `bitcoin`.`pairs_recently_created`\n)\n\nSELECT\n  pair_address,\n  pair_name,\n  creation_time,\n  hours_since_creation,\n  reserve_u_s_d AS total_liquidity_usd,\n  reserve_e_t_h AS total_liquidity_eth,\n  usd_per_eth_price,\n  CASE\n    WHEN reserve_u_s_d > 1000000 THEN 'Large'\n    WHEN reserve_u_s_d > 100000 THEN 'Medium'\n    ELSE 'Small'\n  END AS liquidity_size,\n  -- Normalize by pair age\n  reserve_u_s_d / NULLIF(hours_since_creation, 0) AS hourly_liquidity_growth_usd\nFROM pair_metrics\nORDER BY creation_time DESC", "relation_name": "`bitcoin`.`new_pairs_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:07.769683Z", "completed_at": "2025-04-19T11:10:07.796969Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:07.806817Z", "completed_at": "2025-04-19T11:10:08.527483Z"}], "thread_id": "Thread-1", "execution_time": 0.7815291881561279, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.pairs_recently_created", "compiled": true, "compiled_code": "\n\nSELECT\n    id as pair_id,\n    parseDateTimeBestEffort(created_at_timestamp) as created_at_timestamp,\n    created_at_block_number,\n    token0_symbol,\n    token0_id,\n    token1_symbol,\n    token1_id,\n    reserve_u_s_d as total_liquidity_usd,\n    reserve_e_t_h as total_liquidity_eth,\n    concat(token0_symbol, '-', token1_symbol) as pair_symbol\nFROM `bitcoin`.`pairs_recently_created`", "relation_name": "`bitcoin_bitcoin_derived`.`pairs_recently_created`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:08.583391Z", "completed_at": "2025-04-19T11:10:08.624996Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:08.637855Z", "completed_at": "2025-04-19T11:10:08.899030Z"}], "thread_id": "Thread-1", "execution_time": 0.33286499977111816, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.pool_concentration", "compiled": true, "compiled_code": "\n\nSELECT\n  pair_token0_symbol || '-' || pair_token1_symbol AS pair_name,\n  liquidity_token_balance,\n  liquidity_token_balance / SUM(liquidity_token_balance) OVER () AS overall_share_pct,\n  CASE\n    WHEN liquidity_token_balance > 1000 THEN 'Whale'\n    WHEN liquidity_token_balance > 100 THEN 'Dolphin'\n    ELSE 'Minnow'\n  END AS provider_size\nFROM `bitcoin`.`liquidity_positions_largest`\nORDER BY liquidity_token_balance DESC", "relation_name": "`bitcoin`.`pool_concentration`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:08.945362Z", "completed_at": "2025-04-19T11:10:08.968792Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:08.978843Z", "completed_at": "2025-04-19T11:10:09.311309Z"}], "thread_id": "Thread-1", "execution_time": 0.3824172019958496, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.raw_transactions", "compiled": true, "compiled_code": "\n\nSELECT \n    transaction_id AS tx_hash,\n    transaction_timestamp AS timestamp,\n    amount_u_s_d AS value_usd,\n    pair_token0_symbol || '/' || pair_token1_symbol AS trading_pair\nFROM `bitcoin`.`swaps_latest`\nLIMIT 1000", "relation_name": "`bitcoin`.`raw_transactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:09.353085Z", "completed_at": "2025-04-19T11:10:09.394914Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:09.405575Z", "completed_at": "2025-04-19T11:10:09.775984Z"}], "thread_id": "Thread-1", "execution_time": 0.44095659255981445, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.swaps_latest_for_pair", "compiled": true, "compiled_code": "\n\nSELECT\n    id as swap_id,\n    transaction_id,\n    parseDateTimeBestEffort(transaction_timestamp) as transaction_timestamp,\n    pair_token0_symbol,\n    pair_token1_symbol,\n    amount0_in,\n    amount1_in,\n    amount0_out,\n    amount1_out,\n    amount_u_s_d as amount_usd,\n    -- Calculate derived metrics\n    concat(pair_token0_symbol, '-', pair_token1_symbol) as pair_symbol,\n    CASE \n        WHEN amount0_in > 0 THEN pair_token0_symbol\n        WHEN amount1_in > 0 THEN pair_token1_symbol\n        ELSE NULL\n    END as token_in_symbol,\n    CASE \n        WHEN amount0_out > 0 THEN pair_token0_symbol\n        WHEN amount1_out > 0 THEN pair_token1_symbol\n        ELSE NULL\n    END as token_out_symbol,\n    -- Calculate absolute amounts\n    greatest(amount0_in, amount1_in) as amount_in,\n    greatest(amount0_out, amount1_out) as amount_out,\n    -- Calculate swap direction\n    CASE\n        WHEN amount0_in > 0 AND amount1_out > 0 THEN 'token0_to_token1'\n        WHEN amount1_in > 0 AND amount0_out > 0 THEN 'token1_to_token0'\n        ELSE 'complex'\n    END as swap_direction\nFROM `bitcoin`.`swaps_latest_for_pair`", "relation_name": "`bitcoin_bitcoin_derived`.`swaps_latest_for_pair`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:09.828522Z", "completed_at": "2025-04-19T11:10:09.852456Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:09.858934Z", "completed_at": "2025-04-19T11:10:10.187121Z"}], "thread_id": "Thread-1", "execution_time": 0.3773305416107178, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.test", "compiled": true, "compiled_code": "SELECT 1 as test_value", "relation_name": "`bitcoin`.`test`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:10.225518Z", "completed_at": "2025-04-19T11:10:10.246324Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:10.253499Z", "completed_at": "2025-04-19T11:10:10.468667Z"}], "thread_id": "Thread-1", "execution_time": 0.25549864768981934, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.test_connection", "compiled": true, "compiled_code": "-- models/test_connection.sql\n\n\nSELECT 'swaps_latest' AS table_name, \n       count() AS row_count \nFROM bitcoin.swaps_latest", "relation_name": "`bitcoin_default`.`test_connection`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:10.496118Z", "completed_at": "2025-04-19T11:10:10.524659Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:10.529819Z", "completed_at": "2025-04-19T11:10:10.730759Z"}], "thread_id": "Thread-1", "execution_time": 0.24515652656555176, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.top_10_movers_by_volume", "compiled": true, "compiled_code": "\n\nWITH volume_calculations AS (\n  SELECT\n    from_address AS address,\n    -wbtc_amount AS volume -- Negative for outflows\n  FROM `bitcoin`.`erc20_transfers_wbtc`\n  \n  UNION ALL\n  \n  SELECT\n    to_address AS address,\n    wbtc_amount AS volume -- Positive for inflows\n  FROM `bitcoin`.`erc20_transfers_wbtc`\n),\n\nnet_volume AS (\n  SELECT\n    address,\n    SUM(volume) AS net_volume,\n    SUM(CASE WHEN volume > 0 THEN volume ELSE 0 END) AS total_inflow,\n    SUM(CASE WHEN volume < 0 THEN ABS(volume) ELSE 0 END) AS total_outflow,\n    COUNT(*) AS transaction_count\n  FROM volume_calculations\n  GROUP BY address\n),\n\nranked_volumes AS (\n  SELECT\n    address,\n    net_volume,\n    total_inflow,\n    total_outflow,\n    transaction_count,\n    RANK() OVER (ORDER BY ABS(net_volume) DESC) AS volume_rank\n  FROM net_volume\n)\n\nSELECT\n  address,\n  net_volume,\n  total_inflow,\n  total_outflow,\n  transaction_count,\n  volume_rank\nFROM ranked_volumes\nWHERE volume_rank <= 10\nORDER BY volume_rank", "relation_name": "`bitcoin`.`top_10_movers_by_volume`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-19T11:10:10.762318Z", "completed_at": "2025-04-19T11:10:10.782367Z"}, {"name": "execute", "started_at": "2025-04-19T11:10:10.788691Z", "completed_at": "2025-04-19T11:10:11.023417Z"}], "thread_id": "Thread-1", "execution_time": 0.2837033271789551, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.bitcoin_etl.top_liquidity_providers", "compiled": true, "compiled_code": "\n\nWITH pool_stats AS (\n  SELECT\n    pair_id,\n    pair_token0_symbol || '-' || pair_token1_symbol AS pair_name,\n    COUNT(DISTINCT user_id) AS unique_providers,\n    SUM(liquidity_token_balance) AS total_liquidity\n  FROM `bitcoin`.`liquidity_positions_largest`\n  GROUP BY 1, 2\n),\n\nprovider_rankings AS (\n  SELECT\n    user_id,\n    pair_id,\n    pair_token0_symbol || '-' || pair_token1_symbol AS pair_name,\n    liquidity_token_balance,\n    liquidity_token_balance / SUM(liquidity_token_balance) OVER (PARTITION BY pair_id) AS pool_share_pct,\n    RANK() OVER (PARTITION BY pair_id ORDER BY liquidity_token_balance DESC) AS provider_rank\n  FROM `bitcoin`.`liquidity_positions_largest`\n)\n\nSELECT\n  p.user_id,\n  p.pair_id,\n  p.pair_name,\n  p.liquidity_token_balance,\n  p.pool_share_pct,\n  p.provider_rank,\n  s.total_liquidity,\n  s.unique_providers\nFROM provider_rankings p\nJOIN pool_stats s ON p.pair_id = s.pair_id\nWHERE p.provider_rank <= 10  -- Top 10 providers per pool\nORDER BY p.pair_id, p.provider_rank", "relation_name": "`bitcoin`.`top_liquidity_providers`"}], "elapsed_time": 6.974621534347534, "args": {"cache_selected_only": false, "use_colors_file": true, "log_format": "default", "print": true, "quiet": false, "indirect_selection": "eager", "write_json": true, "project_dir": "/opt/airflow/dbt", "macro_debugging": false, "profiles_dir": "/opt/airflow/dbt", "select": [], "which": "run", "strict_mode": false, "favor_state": false, "use_colors": true, "log_format_file": "debug", "enable_legacy_logger": false, "show_resource_report": false, "log_level_file": "debug", "version_check": true, "log_level": "info", "populate_cache": true, "printer_width": 80, "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "partial_parse_file_diff": true, "log_path": "/opt/airflow/dbt/logs", "send_anonymous_usage_stats": true, "partial_parse": true, "log_file_max_bytes": 10485760, "exclude": [], "introspect": true, "invocation_command": "dbt run --project-dir /opt/airflow/dbt", "static_parser": true, "defer": false}}